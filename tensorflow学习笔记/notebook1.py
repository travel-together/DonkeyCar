import tensorflow as tf
import numpy as np
#数据结构
a=tf.constant([1,5],dtype=tf.int64)
print(a)
print(a.dtype)
print(a.shape)
#数据转换
b=np.arange(0,5)
c=tf.convert_to_tensor(b,dtype=tf.int64)
print(b)
print(c)
#张量初始化
d=tf.zeros([2,3])
e=tf.ones(4)
f=tf.fill([2,3,4],9)
print(d)
print(e)
print(f)
#正态随机张量
g=tf.random.normal([2,2],mean=0.5,stddev=1)
h=tf.random.truncated_normal([2,2],mean=0.5,stddev=1)
print("g:",g.numpy())
print("h:",h.numpy())
#均匀随机张量
i=tf.random.uniform([2,2,2],minval=0,maxval=1)
print("i:",i.numpy())
#tensor内的数据转换
j=tf.cast(i,tf.int32)
print("j:",j.numpy())
#张量最值
print("imin:%f,imax:%f"%(tf.reduce_min(i).numpy(),tf.reduce_max(i).numpy()))
#操作方向:axis=n，表示沿第n维操作，不指定axis，则对所有元素进行操作
print(tf.reduce_sum(i,axis=0))
print(tf.reduce_sum(i,axis=1))
print(tf.reduce_sum(i,axis=2))
print(tf.reduce_sum(i,))
#可训练变量
k=tf.Variable(tf.random.normal([2,2],mean=0,stddev=1))
print("k:",k)
#计算函数
l=tf.fill([2,2],3)
m=tf.fill([2,2],4)
print("l opera m:")
print("+:",tf.add(l,m).numpy())
print("-:",tf.subtract(l,m).numpy())
print("*:",tf.multiply(l,m).numpy())
print("/:",tf.divide(l,m).numpy())
print("×:",tf.matmul(l,m).numpy())
print("l opera:")
print("^2:",tf.square(l).numpy())
print("^3:",tf.pow(l,3).numpy())
print("^0.5:",tf.sqrt(tf.cast(l,dtype=tf.float32)).numpy())
#特征标签配对函数
features=tf.constant([12,23,10,17])
labels=tf.constant([0,1,1,0])
dataset=tf.data.Dataset.from_tensor_slices((features,labels))
print(dataset)
for element in dataset:
    print(element)